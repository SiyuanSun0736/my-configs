# 载入 Rust 的环境变量（由 cargo 提供）
source "$HOME/.cargo/env"


# 设置 NVM 环境变量并加载 nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # 加载 nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # 加载 nvm bash 补全


# Rust 国内镜像
export RUSTUP_DIST_SERVER=https://mirrors.ustc.edu.cn/rust-static
export RUSTUP_UPDATE_ROOT=https://mirrors.ustc.edu.cn/rust-static/rustup


#fcitx
export XMODIFIERS=@im=fcitx
export GTK_IM_MODULE=fcitx
export QT_IM_MODULE=fcitx


#pyenv
export PATH="$HOME/.pyenv/bin:$PATH"
eval "$(pyenv init --path)"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
export PYENV_DOWNLOAD_URL="https://mirrors.aliyun.com/python"
export PYTHON_BUILD_CACHE="https://mirrors.aliyun.com/python-build/"
export PYTHON_BUILD_MIRROR_URL="https://pypi.tuna.tsinghua.edu.cn/simple"

#libvirt
export LIBVIRT_DEFAULT_URI='qemu:///system'

#qemu
export PATH="/usr/local/bin:$PATH"

#emsdk
source $HOME/emsdk/emsdk_env.sh >/dev/null 2>&1

#x-cmd
[ ! -f "$HOME/.x-cmd.root/X" ] || . "$HOME/.x-cmd.root/X" # boot up x-cmd.

#conda
. "$HOME/.local/bin/env"

#brew
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

#gemini
export GEMINI_API_KEY="AIzaSyAt7ut1R_zsPFIdvGIKUxRahizlkXDGe6c"

#go
export GO111MODULE=on
export GOPROXY=https://goproxy.cn

# fnm
FNM_PATH="/home/ssy/.local/share/fnm"
if [ -d "$FNM_PATH" ]; then
  export PATH="/home/ssy/.local/share/fnm:$PATH"
  eval "`fnm env`"
fi

#NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# goenv configuration
export GOENV_ROOT="$HOME/.goenv"
export GOENV_PATH_ORDER="front"  # 确保 shims 在 PATH 的前面
export PATH="$GOENV_ROOT/bin:$PATH"
eval "$(goenv init -)"

